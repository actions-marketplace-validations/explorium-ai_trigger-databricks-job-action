name: Trigger Databricks Job
description: Trigger a Databricks Workflow Job
branding:
  icon: hard-drive
  color: blue
inputs:
  token:
    description: Databricks Authentication Token
    required: true
  host:
    description: Databricks Host URL
    required: true
  job-id:
    description: Databricks Workflow Job ID
    required: true      
  payload:
    description: the directory path to the specified chart
    default: ""
    required: false
runs:
  using: "composite"
  steps:
    - name: Setup Python
      uses: actions/setup-python@v4.5.0

    - name: install-databricks-cli
      uses: microsoft/install-databricks-cli@v1.0.0

    - name: Set Credentials
      shell: bash
      run: |
        echo "DATABRICKS_HOST=${{ inputs.host }}" >> $GITHUB_ENV
        echo "DATABRICKS_TOKEN=${{ inputs.token }}" >> $GITHUB_ENV

    - name: Run Databricks Job
      id: trigger
      shell: bash
      run: |
        if [ -z "${{ inputs.payload }}" ]; then
          job_run_id=$(databricks jobs run-now --job-id ${{ inputs.job-id }} | jq -r '.run_id')
        else
          job_run_id=$(databricks jobs run-now --notebook-params ${{ inputs.payload }} --job-id ${{ inputs.job-id }} | jq -r '.run_id')
        fi
        echo "job_run_id=$job_run_id" >> $GITHUB_OUTPUT

    - name: Wait for Databricks Job to Complete
      shell: bash
      run: |
        result=$(databricks runs get --run-id ${{ steps.trigger.outputs.job_run_id }})
        echo "Job result: $result"
        if [ "$result" = "SUCCESS" ]; then
          echo "Job succeeded"
          exit 0
        else
          echo "Job failed"
          exit 1
        fi